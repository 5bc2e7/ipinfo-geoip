name: Build geoip files
on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 4"
  push:
    branches:
      - master
    paths-ignore:
      - ".gitignore"
      - "LICENSE*"
      - "*.md"
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout codebase
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: ./go.mod

      - name: Set variables
        run: |
          echo "TAG_NAME=$(date +%Y%m%d%H%M)" >> $GITHUB_ENV
          echo "RELEASE_NAME=$(date +%Y%m%d%H%M)" >> $GITHUB_ENV
        shell: bash

      - name: Download IPinfo Lite MMDB
        env:
          IPINFO_TOKEN: ${{ secrets.IPINFO_TOKEN }}
        run: |
          mkdir -p ./ipinfo_data
          curl -L "https://ipinfo.io/data/ipinfo_lite.mmdb?token=${IPINFO_TOKEN}" -o ./ipinfo_data/ipinfo_lite.mmdb

      # --- 新增的校验步骤 ---
      - name: Verify MMDB Checksum
        env:
          IPINFO_TOKEN: ${{ secrets.IPINFO_TOKEN }}
        run: |
          echo "Verifying checksum of the downloaded MMDB file..."
          
          # 安装 jq 工具用于解析 JSON
          sudo apt-get update && sudo apt-get install -y jq
          
          # 从 API 获取官方的 SHA256 校验和
          # 使用 -sL 来静默下载并处理重定向
          REMOTE_SHA256=$(curl -sL "https://ipinfo.io/data/ipinfo_lite.mmdb/checksums?token=${IPINFO_TOKEN}" | jq -r '.checksums.sha256')
          
          # 计算本地下载文件的 SHA256 校验和
          LOCAL_SHA256=$(sha256sum ./ipinfo_data/ipinfo_lite.mmdb | awk '{print $1}')
          
          echo "Official SHA256: ${REMOTE_SHA256}"
          echo "Local    SHA256: ${LOCAL_SHA256}"
          
          # 比较两个校验和
          if [ "${REMOTE_SHA256}" == "${LOCAL_SHA256}" ]; then
            echo "✅ Checksum verification successful."
          else
            echo "❌ Checksum verification FAILED!"
            exit 1 # 校验失败，中止工作流
          fi

      - name: Build geoip files
        run: |
          go build ./
          ./geoip convert -c ./config.json

      - name: Generate sha256 checksum for dat files
        run: |
          if [ ! -d "./output" ] || [ -z "$(ls -A ./output/*.dat 2>/dev/null)" ]; then
            echo "No .dat files found, skipping checksum generation."
            exit 0
          fi
          cd ./output || exit 1
          for name in $(ls *.dat); do
            sha256sum ${name} > ./${name}.sha256sum
          done

      - name: Git push assets to "release" branch
        run: |
          cd output || exit 1
          git init
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git checkout -b release
          git add -A
          git commit -m "${{ env.RELEASE_NAME }}"
          git remote add geoip "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -f -u geoip release

      - name: Purge jsdelivr CDN
        run: |
          cd output || exit 1
          for file in $(ls); do
            curl -i "https://purge.jsdelivr.net/gh/${{ github.repository }}@release/${file}"
          done

      - name: Remove some files to avoid publishing to GitHub release
        run: |
          echo "Cleanup step, can be customized if needed."

      - name: Upload files to GitHub release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file_glob: true
          file: ./output/*
          release_name: ${{ env.RELEASE_NAME }}
          tag: ${{ env.TAG_NAME }}
